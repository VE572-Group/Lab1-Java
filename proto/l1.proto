syntax = "proto2";

package VE572.l1;

option java_package = "com.proto2.message";
option java_outer_classname = "L1Message";

import "VE572.proto";

enum MessageType {
	BEGINNING_ID = 199;
    // ================================================================================
    // 用于demo的协议包[200-210)
    // ================================================================================

    CLIENT_BEGIN_REQUEST    = 200;
    CLIENT_BEGIN_RESPONSE   = 201;
    CLIENT_END_REQUEST      = 202;
    CLIENT_END_RESPONSE     = 203;
    SEND_DATA_REQUEST       = 204;
    SEND_DATA_RESPONSE      = 205;
    QUERY_DATA_REQUEST      = 206;
    QUERY_DATA_RESPONSE     = 207;
	        
    ENDING_ID = 210;
};

extend VE572.Body {
    // ================================================================================
    // 用于demo的协议包[200-210)
    // ================================================================================
    optional ClientBeginRequest client_begin_request    = 200;                     // -------------------------------
    optional ClientBeginResponse client_begin_response  = 201; 
    optional ClientEndRequest client_end_request        = 202;
    optional ClientEndResponse client_end_response      = 203;
    optional SendDataRequest send_data_request          = 204;
    optional SendDataResponse send_data_response        = 205;
    optional QueryDataRequest query_data_request        = 206;
    optional QueryDataResponse query_data_response      = 207;
};

message ClientBeginRequest {
    required uint32 seqid       = 1;
}

message ClientBeginResponse {
    required ResponseCode rc    = 1;
    required uint32 seqid       = 2;
}

message ClientEndRequest {
    required uint32 seqid       = 1;
}

message ClientEndResponse {
    required ResponseCode rc    = 1;
    required uint32 seqid       = 2;
}

message SendDataRequest {
    required uint32 seqid       = 1;
    required uint32 size        = 2;
    required uint32 type        = 3;
    optional bytes data         = 4;
}

message SendDataResponse {
    required ResponseCode rc    = 1;
    required uint32 seqid       = 2;
}

enum OpType {
    MAX     = 1;
    MIN     = 2;
    AVG     = 3;
    SUM     = 4;
    MEDIAN  = 5;
}

message QueryDataRequest {
    required uint32 seqid       = 1;
    required OpType type        = 2;
    required string name        = 3;
}

message QueryResult {
    required string name        = 1; // the name of the data series
    required string quantity    = 2; // the name of the physical quantity (e.g. time, distance, pressure, etc.) defined in the XML file
    required bytes value        = 3; // the value determined by the server based on the request
    required string unit        = 4; // the unit of Value
    required uint32 count       = 5; // the total number of data points in the analysed series
}

message QueryDataResponse {
    required ResponseCode rc    = 1;
    required uint32 seqid       = 2;
    required QueryResult result = 3;
}

enum ErrorCode {
    EC_L1_DATA_SIZE_ERROR =200;
    EC_L1_REQUEST_NAME_ERROR =201;
    EC_L1_REQUEST_TYPE_ERROR =202;
};



